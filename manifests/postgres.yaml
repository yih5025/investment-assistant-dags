apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-initdb
  namespace: investment-assistant
  labels:
    app: postgresql
    component: database

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: investment-assistant
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      component: database
  template:
    metadata:
      labels:
        app: postgresql
        component: database
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:13
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: POSTGRES_INITDB_ARGS
          value: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
        ports:
        - containerPort: 5432
          name: postgresql
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: initdb-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: initdb-scripts
        configMap:
          name: postgresql-initdb
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
      labels:
        app: postgresql
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 20Gi

apiVersion: v1
kind: Service
metadata:
  name: postgresql-headless
  namespace: investment-assistant
  labels:
    app: postgresql
    component: database
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
    component: database

apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: investment-assistant
  labels:
    app: postgresql
    component: database
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
    component: database